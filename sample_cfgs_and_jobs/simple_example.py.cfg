CONFIG = {
    'title': 'Simple Example Config',
    'uid': 'simple_example',

    'job_logs_dir': 'job_logs',
    'logo_filename': 'sample_logo.png',
    'ledger_dir': 'ledgers',
    'smq_server': 'localhost:6050'
} 


def get_jobs():
    #   Default values for job properties
    #
    #   text_prefix                - text which will be shown to the left of the job name in the UI for each node.  If the node is triggered by cron and the
    #                                text prefix is the default value of empty string, the text_prefix will be autofilled with the cron trigger times 
    #   width                      - width of the text for the job node in the UI.  Default value is 300
    #   depends                    - list of job names which this job depends on, default is []
    #   x_offset                   - amount to offset this job node horizontally in the UI from the calculated automatic layout position, default is 0
    #   y_offset                   - amount to offset this job node vertically in the UI from the calculated automatic layout position, default is 0
    #   icon_radius                - radius of the circle icon to be drawn for this job node in the UI, default is 7
    #   text_color                 - color of the text to be drawn for this job node int he UI, default is #000000
    #   text_padding_left          - amount of padding between the circle icon and the text, default is 4
    #   text_padding_right         - amount of padding between the text and any dependency lines leaving the right of the node, default is 4
    #   icon_shape                 - shape of the icon to represent this job, default is 'circle'
    #   no_context_menu            - set to True to disable context menus for this job node in the UI, default is False
    #   parent_curve_settings      - settings for the bezier curve line drawn between this node and its parent node.  default is [[[0.5, 0], [0.75, 1]]]
    #   dependency_line_after_text - if set to True, the dependency lines to child nodes will be drawn to the right of the text
    #                                if set to False, the dependency lines will originate from the icon on the left of the text.  default is True
        
    return [
    	# all control chains must start with a head which contains no dependencies.
		# this head functions as a label and should not have any scripts attached to it
    	{'name': 'TEST JOB',
    	 'width': 120,},
    	    	
        # example of a cron type job
        {'name': 'test_cron_job_5',
         'cron': '*/5 * * * *',     # run every 5 minutes
         'width': 200,
         'depends': ['TEST JOB'],
         'run_cmd': """echo "hello world!" """},
#         'run_python_script': 'xxx.py'},    # run a python script.
#                                            # Return EAGAIN for try again which will set node to RETRYING state
#                                            # Return EOK for success, success message on SMQ will be broadcast

        # example of a job that depends on another job
        {'name': 'test_dep_cron_job',
         'width': 200,
         'periodicity': 'daily',
         'depends': ['test_cron_job_5'],
         'dependency_line_after_text': False,
         'run_cmd': """echo "hello world!" """
         },

        {'name': 'test_dep_cron_job2',
         'dependency_line_after_text': False,
         'x_offset': -140,
         'y_offset': 40,
         'periodicity': 'daily',
         'depends': ['test_dep_cron_job'],
         'parent_curve_settings': [[[0.0, 1.00], [0.0, 1.0]]],
         'run_cmd': """echo "hello world!" """
         },

        # example of a job that depends on several other jobs
        {'name': 'test_multiple_deps',
         'x_offset': -100,
         'y_offset': 40,
         'periodicity': 'daily',
         'depends': ['test_dep_cron_job', 'test_dep_cron_job2'],
         'parent_curve_settings': [[[0.0, 1.0], [0.0, 1.0]], [[0.0, 0.5], [0.0, 1.0]]],
         'run_cmd': """echo "hello world!" """
         },

    ]


# --------------------------------------------------
#    Main
# --------------------------------------------------
if __name__ == '__main__':
    # print the info to stdout
    CONFIG['jobs'] = get_jobs()
    print(CONFIG)
